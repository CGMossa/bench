% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mark.R
\name{mark}
\alias{mark}
\title{Benchmark a series of functions}
\usage{
mark(..., exprs = NULL, setup = NULL, parameters = list(),
  env = parent.frame(), min_time = 0.5, num_iterations = 1e+06,
  check_results = TRUE)
}
\arguments{
\item{...}{Expressions to benchmark}

\item{exprs}{A list of quoted expressions to benchmark}

\item{setup}{code to run before each benchmark group}

\item{parameters}{Variable values to assign, all values will be enumerated
by `expand.grid()`.}

\item{env}{The environment which to evaluate the expressions}

\item{min_time}{The minimum number of seconds to run each expression, set to
`0` to disable and always run `num_iterations` times instead.}

\item{num_iterations}{Expressions will be a maximum of `num_iterations` times.}

\item{check_results}{Should results be checked with [testthat::expect_equal]
for consistency?}
}
\description{
Benchmark a list of quoted expressions. Each expression will always run at
least twice, once to measure the memory allocation and store results and one
or more times to measure timing.
}
\examples{
mark(list(quote(1 + 1), quote(4 - 2)))
dat <- data.frame(x = runif(10000, 1, 1000), y=runif(10000, 1, 1000))
mark(
  dat[dat$x > 500, ],
  dat[which(dat$x > 500), ],
  subset(dat, x > 500))
}
